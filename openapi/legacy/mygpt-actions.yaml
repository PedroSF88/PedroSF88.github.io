openapi: 3.1.0
info:
  title: Curriculum Actions API
  version: "1.0.0"
servers:
  - url: https://hhlzhoqwlqsiefyiuqmg.functions.supabase.co

paths:
  /update_outline:
    post:
      operationId: updateOutline
      summary: Create draft or publish a lesson outline
      security:
        - ActionsKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutlineRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOutlineResponse'

  /refine_outline:
    post:
      operationId: refineOutline
      summary: Use OpenAI to refine lesson flow/readings and save as draft
      security:
        - ActionsKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefineOutlineRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefineOutlineResponse'

  /list_contents:
    post:
      operationId: listContents
      summary: List distinct content areas
      security:
        - ActionsKeyAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListContentsRequest'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContentsResponse'

  /list_units:
    post:
      operationId: listUnits
      summary: List units within a content area
      security:
        - ActionsKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUnitsRequest'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnitsResponse'

  /list_topics:
    post:
      operationId: listTopics
      summary: List topics (published by default)
      security:
        - ActionsKeyAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTopicsRequest'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'

  /get_topic:
    post:
      operationId: getTopic
      summary: Get a single topic by id
      security:
        - ActionsKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTopicRequest'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicResponse'

components:
  securitySchemes:
    ActionsKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    UpdateOutlineRequest:
      type: object
      required: [topic_id]
      properties:
        topic_id: { type: string, format: uuid }
        draft:
          type: object
          additionalProperties: true
        publish:
          type: boolean
          description: Set true to copy current draft to published
        schema_version:
          type: integer
          enum: [1, 2]
          default: 1
      description: "Provide either draft OR publish:true; choose schema_version (default 1)"

    UpdateOutlineResponse:
      type: object
      properties:
        ok:
          type: boolean
        mode:
          type: string
          enum: [draft, published]

    RefineOutlineRequest:
      type: object
      required: [topic_id]
      properties:
        topic_id: { type: string, format: uuid }
        schema_version:
          type: integer
          enum: [1, 2]
          default: 1

    RefineOutlineResponse:
      type: object
      properties:
        ok:
          type: boolean
        draft:
          type: object
          additionalProperties: true

    ListContentsRequest:
      type: object
      properties:
        limit:
          type: integer
          minimum: 1
          maximum: 200
          default: 50
        offset:
          type: integer
          minimum: 0
          default: 0
        search:
          type: string

    ListContentsResponse:
      type: object
      properties:
        ok:
          type: boolean
        count:
          type: integer
        items:
          type: array
          items:
            type: string  # each item is a content_area string

    ListUnitsRequest:
      type: object
      required: [content_area]
      properties:
        content_area:
          type: string
        limit:
          type: integer
          minimum: 1
          maximum: 200
          default: 50
        offset:
          type: integer
          minimum: 0
          default: 0
        search:
          type: string

    ListUnitsResponse:
      type: object
      properties:
        ok:
          type: boolean
        count:
          type: integer
        items:
          type: array
          items:
            type: object
            properties:
              id: { type: string, format: uuid }
              title: { type: string }
              unit_number: { type: number, nullable: true }
              question: { type: string, nullable: true }
              content_area: { type: string }

    ListTopicsRequest:
      type: object
      properties:
        unit_id:
          type: string
          format: uuid
        include_drafts:
          type: boolean
          default: false
        limit:
          type: integer
          minimum: 1
          maximum: 200
          default: 50
        offset:
          type: integer
          minimum: 0
          default: 0
        search:
          type: string

    ListTopicsResponse:
      type: object
      properties:
        ok:
          type: boolean
        count:
          type: integer
        items:
          type: array
          items:
            type: object
            properties:
              id: { type: string, format: uuid }
              topic: { type: string, nullable: true }
              published: { type: boolean }
              unit_id: { type: string, format: uuid, nullable: true }
              updated_at: { type: string, format: date-time, nullable: true }

    GetTopicRequest:
      type: object
      required: [topic_id]
      properties:
        topic_id:
          type: string
          format: uuid

    GetTopicResponse:
      type: object
      properties:
        ok:
          type: boolean
        topic:
          type: object
          nullable: true
          additionalProperties: true
